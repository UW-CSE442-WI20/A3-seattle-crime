{"version":3,"sources":["Header.js","LeftContainer.js","DataContainer.js","BigMap.js","Map.js","App.js","serviceWorker.js","index.js","map.geojson"],"names":["Header","styled","div","Title","valuetext","value","LeftContainer","props","CustomSlider","Slider","defaultValue","radius","getAriaValueText","aria-labelledby","max","min","step","marks","label","valueLabelDisplay","onChange","event","r","updateRadius","CloseButton","IconButton","Headline","pieData","barData","text","crime","this","categoryData","randomColor","Math","floor","random","toString","push","title","color","markers","length","formatData","aria-label","onClick","updateCheckDataCon","latitude","longitude","data","style","margin","height","width","document","getElementById","offsetWidth","ylabel","xlabel","PureComponent","BigMap","useState","setMarkers","setCategoryData","handleClick","lngLat","http","ENDPOINT","axios","get","then","response","console","log","MyCircle","Container","Circle","zoom","viewport","Marker","isHovered","updateIsHovered","check1","check2","check3","check4","check5","check6","filters","updateFilters","ColumnDiv","setCheck","status","handleRequest","className","mapboxApiAccessToken","mapStyle","onDblClick","key","offsetLeft","offsetTop","map","m","i","draggable","onDrag","viewBox","cursor","fill","stroke","transform","onMouseEnter","onMouseLeave","d","id","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.df4a2029.chunk.js","sourcesContent":["import React, {useState, PureComponent} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Header() {\r\n    const Header = styled.div`\r\n    background: pink;\r\n  `;\r\n\r\n    const Title = styled.div`\r\n    margin: 0 0;\r\n    padding: 0px 500px;\r\n    font-size: 1.5em;\r\n    display: inline-block;\r\n\r\n  `;\r\n\r\n\r\n    return(\r\n\r\n      <Header>\r\n        <Title>CRIME IN MY AREA</Title>\r\n      </Header>\r\n    );\r\n\r\n\r\n}","import React, {useState, PureComponent} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Checkbox from '@material-ui/core/CheckBox';\r\nimport ReactMapGL, {Marker} from \"react-map-gl\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`;\r\n}\r\n\r\nexport default function LeftContainer(props) {\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: '0',\r\n  },\r\n  {\r\n    value: 0.5,\r\n    label: '0.5',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: '1',\r\n  },\r\n  {\r\n      value: 1.5,\r\n      label: '1.5',\r\n   },\r\n  {\r\n    value: 2,\r\n    label: '2',\r\n  },\r\n];\r\n\r\n\r\n\r\n//     const InfoBox = styled.div`\r\n//           height: 400px;\r\n//           width: 400px;\r\n//           margin: 20px 0px 0px 10px;\r\n//           background: white;\r\n//    `;\r\n//    const Box = styled.div`\r\n//              height: 100px;\r\n//              width: 350px;\r\n//              background: white;\r\n//       `;\r\n   const CustomSlider = styled(Slider)`\r\n        // padding: 50px;\r\n   `;\r\n\r\n        return(\r\n            <div>\r\n                <h3>Highlight Features Containing Similar Data</h3>\r\n                <p>Hover over counties to highlight counties that share the same name.</p>\r\n                <div>\r\n                    <CustomSlider\r\n                        defaultValue={props.radius}\r\n                        getAriaValueText={valuetext}\r\n                        aria-labelledby=\"discrete-slider\"\r\n                        max={2}\r\n                        min={0}\r\n                        step={0.25}\r\n                        marks={marks}\r\n                        valueLabelDisplay=\"auto\"\r\n                        onChange={(event, r)=>{props.updateRadius(r)}}\r\n                      />\r\n                </div>\r\n                {/* <FormControlLabel\r\n                    control={\r\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\r\n                         }\r\n                         label=\"Secondary\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\r\n                    }\r\n                    label=\"Secondary\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\r\n                         }\r\n                         label=\"Secondary\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\r\n                    }\r\n                    label=\"Secondary\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\r\n                         }\r\n                         label=\"Secondary\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\r\n                    }\r\n                    label=\"Secondary\"\r\n                /> */}\r\n            </div>\r\n        );\r\n\r\n\r\n}","import React, {useState, PureComponent} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport ReactMapGL, {Marker} from \"react-map-gl\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport PieChart from 'react-minimal-pie-chart';\r\nimport BarChart from 'react-bar-chart';\r\n\r\n\r\n\r\nconst CloseButton = styled(IconButton)`\r\n    margin: 0px; 0px;\r\n`;\r\n\r\nconst Headline = styled.div`\r\n    font-weight: bold;\r\n    font-size: 2em;\r\n    text-align: center;\r\n`;\r\n\r\nvar pieData = [\r\n\r\n  ];\r\n\r\nconst barData = [\r\n    {text: '1990', value: 500}, \r\n    {text: '1991', value: 300} \r\n  ];\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n//     const InfoBox = styled.div`\r\n//           height: 400px;\r\n//           width: 400px;\r\n//           margin: 20px 0px 0px 10px;\r\n//           background: white;\r\n//    `;\r\n//    const Box = styled.div`\r\n//              height: 200px;\r\n//              width: 350px;\r\n//              background: white;\r\n//       `;\r\n\r\nexport default class LeftContainer extends PureComponent {\r\n    formatData() {\r\n        for (const crime in this.props.categoryData) {\r\n            const randomColor = '#' + Math.floor(Math.random()*16777215).toString(16);\r\n            pieData.push({\r\n                title: crime,\r\n                value: this.props.categoryData[crime],\r\n                color: randomColor\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.props.markers.length === 0 || !this.props.categoryData) {\r\n            return <div></div>;\r\n        } else {\r\n            this.formatData();\r\n\r\n            return(\r\n                <div>\r\n                    <CloseButton aria-label=\"close\" onClick={()=>{this.props.updateCheckDataCon(false); this.props.markers.length = 0}}>\r\n                        <CloseIcon />\r\n                    </CloseButton>\r\n                    <Headline>Crime Data</Headline>\r\n                    <p>Latitude: {this.props.markers[0].latitude}</p> \r\n                    <p>Longitude: {this.props.markers[0].longitude}</p>\r\n                    <p>Radius: {this.props.radius}</p>\r\n                    <p>Crime Score: {}</p>\r\n                    <PieChart data={pieData} />\r\n                    <BarChart style={{margin:\"20px\"}}\r\n                        height={500} \r\n                        width={document.getElementById(\"right-col\").offsetWidth}\r\n                        data={barData}\r\n                        ylabel='Number of Crimes'\r\n                        xlabel='Year'\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n}","import React, {useState, PureComponent} from \"react\";\r\nimport ReactMapGL, {Marker, Layer} from \"react-map-gl\";\r\nimport * as zipCode from \"./zip-code.json\";\r\nimport {Button, Container} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport Header from \"./Header\";\r\nimport LeftContainer from \"./LeftContainer\";\r\nimport data from \"./map.geojson\";\r\nimport DataContainer from \"./DataContainer\";\r\nimport {Rectangle, Circle, Ellipse, Line, Polyline, CornerBox, Triangle} from 'react-shapes';\r\n\r\nimport axios from 'axios'\r\n\r\n\r\nexport default function BigMap() {\r\n\r\n  \r\n    const SIZE = 30;\r\n    const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n    c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n    C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n    const [count,setCount] = useState(0);\r\n    const [countt,setCountt] = useState(0);\r\n\r\n    const [radius, updateRadius] = useState(1);\r\n    const [markers, setMarkers] = useState([]);\r\n\r\n    const [categoryData, setCategoryData] = useState(null);\r\n\r\n    const handleClick = ({lngLat: [longitude, latitude]}) => {\r\n      setMarkers(markers => [{longitude, latitude}]);\r\n      const http = ENDPOINT + longitude + \"/\" + latitude + \"/\" + .1;\r\n      axios.get(http)\r\n      .then((response) => {\r\n        console.log(\"Response: \", response.data);\r\n        setCategoryData(response.data);\r\n        \r\n      });\r\n    }\r\n\r\n    const ENDPOINT = \"http://ec2-18-188-137-58.us-east-2.compute.amazonaws.com:8000/crimes/\";\r\n    \r\n\r\n\r\n\r\n  const Map = styled(Container)`\r\n        height: 500px;\r\n        width: 600px;\r\n        margin: 200px 0px 0px 1300px;\r\n        background: white;\r\n  `;\r\n\r\n  const MyCircle = styled(Circle)`\r\n    opacity: 0.2;\r\n  `;\r\n\r\n  const [viewport,setViewport] = useState({\r\n    latitude: 47.6062,\r\n    longitude: -122.3321,\r\n    width: \"100%\",\r\n    height: \"95vh\",\r\n    zoom: 10.5\r\n  });\r\n\r\n  const MyMarker = styled(Marker)`\r\n    background: white;\r\n  `;\r\n\r\n    const [isHovered, updateIsHovered] = useState(false);\r\n\r\n    const [checkDataCon, updateCheckDataCon] = useState(false);\r\n\r\n  const [filters, updateFilters] = useState({\r\n    check1: true,\r\n    check2: false,\r\n    check3: false,\r\n    check4: false,\r\n    check5: false,\r\n    check6: false\r\n  });\r\n\r\n  const ColumnDiv = styled.div`\r\n    float: left;\r\n    padding: 10px;\r\n    width: 30%;\r\n    word-wrap: break-word;    \r\n  `;\r\n  \r\n  const [check, setCheck] = useState(false);\r\n\r\n  const [status, updateStatus] = useState(null);\r\n  \r\n  const handleRequest = () => { \r\n    //  http = ENDPOINT + \"/\" + markers.latitude + \"/\" + markers.longitude + \"/\" + radius;\r\n    // axios.get('http://jservice.io/api/random')\r\n    //   .then((response) => {\r\n    //     console.log(response);\r\n    //     updateStatus(response);\r\n    //     console.log(status);\r\n    //   });\r\n    console.log(status);\r\n    \r\n    }\r\n    \r\n  \r\n\r\n    return (\r\n      <div>\r\n        <ColumnDiv className=\"column left\">\r\n          <LeftContainer filters={filters} updateFilters={updateFilters} radius={radius} updateRadius={updateRadius}/>\r\n        </ColumnDiv>\r\n        <ColumnDiv className=\"column middle\">\r\n        <ReactMapGL\r\n            {...viewport}\r\n            mapboxApiAccessToken=\"pk.eyJ1IjoibXMxOTA3IiwiYSI6ImNrNjhjMXB0eTAzZjUzZm9nbmQzMGc4Y3QifQ.ZuJyRlBq6Wo2l_RPrARpnQ\"\r\n          mapStyle=\"mapbox://styles/ms1907/ck68cppyd0bbp1ipm1z710o6z\"\r\n                \r\n          onDblClick={handleClick}\r\n          onClick={() => {\r\n              updateCheckDataCon(false); \r\n              console.log(\"CHECK\"); \r\n              console.log(() => {handleRequest()});\r\n              handleRequest();\r\n            }\r\n          }\r\n            >\r\n              <Marker key={\"a\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={-800} offsetTop={-400}>\r\n                      </Marker>\r\n\r\n                     \r\n              {markers.map((m, i) =>\r\n                <div>\r\n                  <Marker {...m} key={i} draggable={true} onDrag={handleClick}>\r\n                      <svg height={SIZE}\r\n                          viewBox=\"0 0 24 24\"\r\n                          className=\"aaa\"\r\n                          style={{\r\n                            cursor: 'pointer',\r\n                            fill: isHovered ? '#333' : '#d00',\r\n                            stroke: 'none',\r\n                            transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\r\n                          }}\r\n                          onClick={() => {setCheck(true); updateCheckDataCon(true); console.log(markers)}}\r\n                          onMouseEnter={()=>{updateIsHovered(true)}}\r\n                          onMouseLeave={()=>{updateIsHovered(false)}}\r\n                        >\r\n                        <path d={ICON} />\r\n                      </svg>\r\n                  </Marker>\r\n                  <Marker {...m} key={i+1} draggable={true} onDrag={handleClick} offsetLeft={-50*radius} offsetTop={-50*radius}>\r\n                    <MyCircle r={radius*50} fill={{color:'#2409ba'}}/>\r\n\r\n                  </Marker>\r\n                  \r\n                </div>\r\n              )}\r\n          </ReactMapGL>\r\n        </ColumnDiv>\r\n        <ColumnDiv className=\"column right\" id=\"right-col\" >\r\n          <DataContainer markers={markers} setCheck={setCheck} updateCheckDataCon={updateCheckDataCon} radius={radius} categoryData={categoryData}/>\r\n        </ColumnDiv>\r\n      </div>\r\n      \r\n    );\r\n  \r\n}\r\n\r\n\r\n","import React, {useState, Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactMapGL, {Marker, Popup} from \"react-map-gl\";\r\nimport LeftContainer from \"./LeftContainer\";\r\nimport DataContainer from \"./DataContainer\"\r\n\r\nexport default class Map extends Component {\r\n  state = {\r\n    showPopup: true,\r\n    viewport: {\r\n    latitude: 47.6062,\r\n    longitude: -122.3321,\r\n    width: \"100vw\",\r\n    height: \"95vh\",\r\n    zoom: 11.5\r\n    },\r\n    markersLat: null,\r\n    markersLong: null,\r\n    };\r\n\r\n_onViewportChange = viewport => this.setState({viewport});\r\n\r\n\r\n  render() {\r\n    const {showPopup, viewport, markersLat, markersLong} = this.state;\r\n    return (\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken=\"pk.eyJ1IjoibXMxOTA3IiwiYSI6ImNrNjhjMXB0eTAzZjUzZm9nbmQzMGc4Y3QifQ.ZuJyRlBq6Wo2l_RPrARpnQ\"\r\n        mapStyle=\"mapbox://styles/ms1907/ck68cppyd0bbp1ipm1z710o6z\"\r\n        onViewportChange={this._onViewportChange}\r\n        >\r\n        {showPopup && <Popup\r\n          latitude={viewport.latitude}\r\n          longitude={viewport.longitude}\r\n          closeButton={true}\r\n          closeOnClick={false}\r\n          onClose={() => this.setState({showPopup: false})}\r\n          anchor=\"top\" >\r\n          <div>You are here</div>\r\n        </Popup>}\r\n        <Marker key={\"a\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={-900} offsetTop={-400}>\r\n            <LeftContainer/>\r\n         </Marker>\r\n\r\n         <Marker key={\"ab\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={500} offsetTop={-400}>\r\n            <DataContainer/>\r\n          </Marker>\r\n      </ReactMapGL>\r\n    );\r\n  }\r\n}","import React, {useState, Component} from \"react\";\r\nimport ReactMapGL, {Marker} from \"react-map-gl\";\r\nimport * as zipCode from \"./zip-code.json\";\r\nimport {Button, Container} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport PieChart from 'react-minimal-pie-chart';\r\nimport Header from \"./Header\";\r\nimport LeftContainer from \"./LeftContainer\";\r\nimport BigMap from \"./BigMap\";\r\nimport Map from \"./Map\";\r\n\r\nexport default class App extends Component {\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n          <Header/>\r\n          <BigMap/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/map.e1d7f378.geojson\";"],"sourceRoot":""}